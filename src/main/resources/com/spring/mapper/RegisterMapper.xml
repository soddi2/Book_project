<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.RegisterMapper">

	<!-- 회원가입 -->
	<insert id="register">
		insert into client(userid, password, email, address, mobile)
		values( #{userid}, #{password}, #{email}, #{address}, #{mobile})
	</insert>

	<!-- 중복 아이디 -->
	<select id="checkId" resultType="int">
		select count(*) from client where userid = #{userid}
	</select>
	
	<!-- 로그인 -->
	<select id="isLogin" resultType="com.spring.domain.LoginVO">
		select userid from client where userid = #{userid} and password = #{password}
	</select>
	
	<!-- 비밀번호 확인 -->
	<select id="check_password" resultType="java.lang.String"> 
		select password from client where userid=#{userid}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="modify"> 
		update client set password = #{password}, email = #{email}, address = #{address} where userid = #{userid}
	</update>
	
	<!-- 탈퇴 -->
	<delete id="leave">
		delete from client where userid = #{userid} and password = #{password}  
	</delete>
	
	<!-- 비밀번호 찾는 아이디  -->
	<select id="forgetId" resultType="com.spring.domain.LoginVO">
		select * from client where userid = #{userid} and email = #{email}
	</select>
	
	<!-- 비밀번호 찾기 (비밀번호 변경) -->
	<update id="forgetPwd">
		update client set password = #{password} where userid = #{userid}
	</update>
	
	<!-- 시큐리티 spring_member insert-->
	<!-- <insert id="security">
		insert into SPRING_MEMBER(userid,userpw,username) values(#{userid},#{userpw},#{username});
	</insert> -->
	
	<!-- 시큐리티 spring_member_auth insert -->
	<!-- <insert id="security_auth">
		insert into SPRING_MEMBER_AUTH(userid,auth) values(#{userid},#{auth});
	</insert> -->
	
	<!-- MemberVO를 resultmap의 형태로 변환 -->
	<!-- <resultMap type="com.spring.domain.MemberVO" id="memberMap">
		<id property="userid" column="userid" />
		<result property="userid" column="userid" />
		<result property="userpw" column="userpw" />
		<result property="username" column="username" />
		<result property="regdate" column="regdate" />
		<result property="updatedate" column="updatedate" />
		<collection property="authList" resultMap="authMap"></collection>
	</resultMap> -->
	
	<!-- AuthVO를 resultmap의 형태로 변환 -->
	<!-- <resultMap type="com.spring.domain.AuthVO" id="authMap">
		<result property="userid" column="userid" />
		<result property="auth" column="auth" />
	</resultMap> -->
	

	<!-- 왼쪽 테이블 기준 조인 -->
	<!-- <select id="read" resultMap="memberMap">
		select mem.userid, userpw, username, enabled, regdate, updatedate, auth
		from spring_member mem left outer join spring_member_auth auth on mem.userid = auth.userid
		where mem.userid = #{userid}
	</select> -->
	
</mapper>


















